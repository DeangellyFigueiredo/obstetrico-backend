import { faker } from "@faker-js/faker";
import { Injectable, OnModuleDestroy, OnModuleInit } from "@nestjs/common";
import { PrismaClient } from "@prisma/client";
import { CreateEnfermeiroDTO } from "src/dtos/enfermeiro/createEnfermeiro.dto";
import { CreateHistoricoDTO } from "src/dtos/historico/createHistorico.dto";
import { CreateNascimentoDTO } from "src/dtos/nascimento/createNascimento.dto";
import { CreatePuerperioDto } from "src/dtos/puerperio/createPuerperio.dto";
import { CreateTrabalhoDePartoDTO } from "src/dtos/trabalhoDeParto/createTrabalhoDePArto.dto";
import { Historico } from "src/entities/historico.entity";
import { Nascimento } from "src/entities/nascimento.entity";
import { Puerperio } from "src/entities/puerperio.entity";
import { TrabalhoDeParto } from "src/entities/trabalhoDeParto.entity";
import { v4 as uuid } from "uuid";
import * as bcrypt from "bcrypt";
import { ERoles } from "src/utils/ETypes";

@Injectable()
export class PrismaService
  extends PrismaClient
  implements OnModuleInit, OnModuleDestroy
{
  async onModuleInit() {
    await this.$connect();
    //create 10 patients
    const paciente = await this.paciente.count();
    if (paciente === 0 && process.env.MOCK_SERVER === "true") {
      for (let i = 0; i < 10; i++) {
        await this.paciente.create({
          data: {
            id: uuid(),
            cns: faker.random.word(),
            nome: faker.name.fullName(),
            dataNascimento: faker.date.past(20),
            corOuRaca: faker.color.human(),
            escolaridade: faker.random.word(),
            estadoCivil: faker.random.word(),
            idade: faker.datatype.number({ min: 15, max: 50 }).toString(),
            nacionalidade: faker.random.word(),
            naturalidade: faker.random.word(),
            procedenciaObservacao: faker.random.word(),
            uf: faker.random.word(),
            procedencia: "Transferida",
            profissao: faker.random.word(),
          },
        });
      }

      //get one patient
      const paciente = await this.paciente.findFirst();
      //create Historico to patient
      const trabalhoParto: CreateTrabalhoDePartoDTO = {
        fr: faker.datatype.number({ min: 15, max: 50 }).toString(),
        mrpm: faker.datatype.number({ min: 15, max: 50 }).toString(),
        respiracao: "EUPNEICA",
        respiracaoNormoHipo: "Normocorada",
        nome: faker.random.word(),
        idade: faker.datatype.number({ min: 15, max: 50 }).toString(),
        dataNascimento: faker.date.past(20),
        temperatura: faker.datatype.number({ min: 15, max: 50 }).toString(),
        pa: faker.random.numeric(),
        pulso: faker.datatype.number({ min: 15, max: 50 }).toString(),
        batimentosFetais: faker.datatype
          .number({ min: 15, max: 50 })
          .toString(),
        hemorroidas: faker.datatype.boolean(),
        varizes: faker.datatype.boolean(),
        edemaLocal: faker.random.word(),
        quantasCruzes: faker.random.word(),
        outrasInformacoes: faker.random.word(),
        tontura: faker.datatype.boolean(),
        cefaleia: faker.datatype.boolean(),
        visaoTurva: faker.datatype.boolean(),
        convulsoes: faker.datatype.boolean(),
        confusaoMental: faker.datatype.boolean(),
        depressaoPosParto: "sim",
        integra: faker.datatype.boolean(),
        escoreacoes: faker.datatype.boolean(),
        feridas: faker.datatype.boolean(),
        hiperemia: faker.datatype.boolean(),
        hematomas: faker.datatype.boolean(),
        equimoses: faker.datatype.boolean(),
        mamas: "simetricas",
        mamilos: "protusos",
        colostro: faker.datatype.boolean(),
        outrasInformacoesColostro: faker.random.word(),
        manobraDeLeopold: faker.random.word(),
        apresentacao: faker.random.word(),
        alturaUterina: "ausenciaDeColostro",
        circunferenciaAbdominal: faker.random.word(),
        mobilidadeCefalica: "movel",
        coloDilatacao: "fino",
        planoDeLee: faker.random.numeric(),
        observacaoToqueVaginal: faker.datatype.boolean(),
        bolsa: "integra",
        hora: "amniotomia",
        corDoLiquidoAmniotico: "espesso",
        outrasInformacoesToqueVaginal: faker.random.word(),
        dataUltimaMenstruacao: faker.date.past(20),
        dataProvavelParto: faker.date.past(20),
        dataUltimoParto: faker.date.past(20),
        algumFilhoMalformado: faker.datatype.boolean(),
        especifiqueFilhoMalformado: faker.random.word(),
        episiotomia: faker.datatype.boolean(),
        forcepes: faker.datatype.boolean(),
        hpp: faker.datatype.boolean(),
        retencaoPlacenta: faker.datatype.boolean(),
        outrosPartosAnteriores: faker.random.word(),
        tratamentoPartoAnterior: faker.random.word(),
        dstIst: faker.random.word(),
        outrasInformacoesReproducao: faker.random.word(),
        peso: faker.datatype.number({ min: 15, max: 50 }).toString(),
        altura: faker.datatype.number({ min: 15, max: 50 }).toString(),
        ultimaRefeicao: faker.random.word(),
        outrasInformacoesHidratacao: faker.random.word(),
        desidratada: faker.datatype.boolean(),
        fome: faker.datatype.boolean(),
        anorexia: faker.datatype.boolean(),
        sede: faker.datatype.boolean(),
        labiosRessecados: faker.datatype.boolean(),
        nauseas: faker.datatype.boolean(),
        vomitos: faker.datatype.boolean(),
        vesical: faker.random.word(),
        intestinal: faker.random.word(),
        evacuouAposParto: faker.datatype.boolean(),
        tempoSemEvacuar: faker.random.word(),
        vaginal: faker.random.word(),
        outrasInformacoesVaginal: faker.random.word(),
        protese: faker.random.word(),
        ondeProtese: faker.random.word(),
        dificuldadeDeLocomocao: faker.random.word(),
        outrasInformacoesLocomocao: faker.random.word(),
        redeVenosa: faker.random.word(),
        puncaoVenosa: faker.random.word(),
        dispositivoUtilizado: faker.random.word(),
        alergiaMedicamentos: faker.datatype.boolean(),
        quaisMedicamentos: faker.random.word(),
        tipoDeSangue: faker.random.word(),
        recebeuImunoglobulina: faker.datatype.boolean(),
        vicios: faker.random.word(),
        numeroCigarros: faker.random.word(),
        usoDeDrogas: faker.random.word(),
        usoDuranteGestacao: faker.datatype.boolean(),
        outrasInformacoesVicios: faker.random.word(),
        acuidadeVisual: faker.random.word(),
        acuidadeAuditiva: faker.random.word(),
        movimentacaoFetal: faker.random.word(),
        contracaoUterina: faker.random.word(),
        frequencia: faker.random.numeric(),
        intensidade: faker.random.word(),
        localDorAbdominal: faker.datatype.boolean(),
        localDorSacral: faker.datatype.boolean(),
        localDorLombar: faker.datatype.boolean(),
        localDorOutro: faker.datatype.boolean(),
        respiracaoAlivia: faker.datatype.boolean(),
        banhoMornoAlivia: faker.datatype.boolean(),
        posicaoAlivia: faker.datatype.boolean(),
        massagemAlivia: faker.datatype.boolean(),
        outrosAlivia: faker.datatype.boolean(),
        higieneDesconforto: faker.datatype.boolean(),
        acessoVenosoDesconforto: faker.datatype.boolean(),
        barulhoDesconforto: faker.datatype.boolean(),
        odorDesconforto: faker.datatype.boolean(),
        outrosDesconforto: faker.datatype.boolean(),
        sonoRepouso: faker.random.word(),
        numeroNoitesSemDormir: faker.random.word(),
        motivoSemDormir: faker.random.word(),
        realizouAtividadeFisica: faker.datatype.boolean(),
        quaisAtividades: faker.random.word(),
        outrasInformacoesAtividade: faker.random.word(),
        condicoesHigiene: faker.random.word(),
        outrasInformacoesHigiene: faker.random.word(),
        preNatal: faker.datatype.boolean(),
        numeroConsultas: faker.random.word(),
        igQueIndicouPreNatal: faker.random.word(),
        planoDeParto: faker.datatype.boolean(),
        participouGrupoGestante: faker.datatype.boolean(),
        realizouVinculacao: faker.datatype.boolean(),
        tpParto: faker.datatype.boolean(),
        cesarea: faker.datatype.boolean(),
        intercorrenciasGestacao: faker.datatype.boolean(),
        amamentacao: faker.datatype.boolean(),
        alojamentoConjunto: faker.datatype.boolean(),
        puerperio: faker.datatype.boolean(),
        outros: faker.datatype.boolean(),
        gostariaDeReceberInformacoes: faker.random.word(),
        compreensao: faker.random.word(),
        outrasInformacoesNecessidades: faker.random.word(),
        planejouGravidez: faker.datatype.boolean(),
        elaDesejaGravidez: faker.datatype.boolean(),
        pretendeAmamentar: faker.datatype.boolean(),
        amamentouOutrosFilhos: faker.datatype.boolean(),
        quantosMeses: faker.random.word(),
        preocupacoesIncomoda: faker.datatype.boolean(),
        medosIncomoda: faker.datatype.boolean(),
        ansiedadeIncomoda: faker.datatype.boolean(),
        angustiaIncomoda: faker.datatype.boolean(),
        agitacaoIncomoda: faker.datatype.boolean(),
        choroIncomoda: faker.datatype.boolean(),
        gritoIncomoda: faker.datatype.boolean(),
        refereNaoTerEnergiaIncomoda: faker.datatype.boolean(),
        relutancaIncomoda: faker.datatype.boolean(),
        dificuldadeLidarIncomoda: faker.datatype.boolean(),
        localDor: faker.datatype.boolean(),
        quaisExpectativas: faker.random.word(),
        religiao: faker.datatype.boolean(),
        qualReligiao: faker.random.word(),
        fazAlgumaLimitacao: faker.datatype.boolean(),
        quaisLimitacoes: faker.random.word(),
        desejaAcompanhante: faker.datatype.boolean(),
        nomeAcompanhante: faker.random.word(),
        vinculoAcompanhante: faker.random.word(),
        servicoSocialEncaminhamento: faker.datatype.boolean(),
        psicologoEncaminhamento: faker.datatype.boolean(),
        fisioterapiaEncaminhamento: faker.datatype.boolean(),
        outrosEncaminhamentos: faker.random.word(),
        outrasInformacoesEncaminhamento: faker.random.word(),
      };
      const newTrabalhoParto = new TrabalhoDeParto(
        { ...trabalhoParto },
        paciente
      );
      await this.trabalhoDeParto.create({
        data: {
          ...newTrabalhoParto,
          paciente: { connect: { id: paciente.id } },
        },
      });

      const historico: CreateHistoricoDTO = {
        dmg: faker.datatype.boolean(),
        itu: faker.datatype.boolean(),
        hiperemese: faker.datatype.boolean(),
        fm: faker.datatype.boolean(),
        polidramnia: faker.datatype.boolean(),
        oligodramnia: faker.datatype.boolean(),
        sheg: faker.datatype.boolean(),
        hipotireoidismo: faker.datatype.boolean(),
        tpp: faker.datatype.boolean(),
        has: faker.datatype.boolean(),
        dm: faker.datatype.boolean(),
        doencaPsiquiatrica: faker.datatype.boolean(),
        outrasDoencasPrevias: faker.random.word(),
        tratamento: faker.random.word(),
        motivoInternacao: "período expulsivo",
        outroMotivoInternacao: faker.random.word(),
        motivoInternacaoObservacao: faker.random.word(),
        leito: faker.random.word(),
        dataInternacao: faker.date.past(20),
        horaInternacao: faker.random.word(),
        risco: "Habitual",
      };

      const newHistorico = new Historico({ ...historico }, paciente);
      await this.historico.create({
        data: {
          ...newHistorico,
          paciente: { connect: { id: paciente.id } },
        },
      });

      const puerperio: CreatePuerperioDto = {
        fr: faker.datatype.number().toString(),
        oxigenacao: "cianose",
        ingestaoLiquidos: faker.random.numeric(),
        labiosRessecados: faker.datatype.boolean(),
        linguaSeca: faker.datatype.boolean(),
        peleSeca: faker.datatype.boolean(),
        polidipsia: faker.datatype.boolean(),
        sede: faker.datatype.boolean(),
        turgoDaPele: faker.datatype.boolean(),
        hidratacaoVenosa: faker.datatype.string(),
        local: faker.random.word(),
        ruidosHidroaereos: faker.random.word(),
        alteracoesDentarias: faker.datatype.boolean(),
        disfagia: faker.datatype.boolean(),
        dispesia: faker.datatype.boolean(),
        distensaoAbdominal: faker.datatype.boolean(),
        fome: faker.datatype.boolean(),
        nauseas: faker.datatype.boolean(),
        dorEpigastica: faker.datatype.boolean(),
        intoleranciaAlimentos: faker.datatype.boolean(),
        especificar: faker.random.numeric(),
        debitoUrinario: faker.random.numeric(),
        aspectoUrina: faker.random.numeric(),
        disuria: faker.datatype.boolean(),
        svd: faker.datatype.boolean(),
        bexigoma: faker.datatype.boolean(),
        abdomenGlobosa: faker.datatype.boolean(),
        hemorroidas: faker.datatype.boolean(),
        dorAbdominal: faker.datatype.boolean(),
        dificuldadeDeDefecar: faker.datatype.boolean(),
        fezesDurasSecas: faker.datatype.boolean(),
        eliminacaoNenhum: faker.datatype.boolean(),
        acordaVariasVezes: faker.datatype.boolean(),
        insonia: faker.datatype.boolean(),
        sonolencia: faker.datatype.boolean(),
        desconfortoFisico: faker.datatype.boolean(),
        desconfortoAmbiental: faker.datatype.boolean(),
        cabelosSujos: faker.datatype.boolean(),
        caspas: faker.datatype.boolean(),
        seborreira: faker.datatype.boolean(),
        faltaDeMotivacao: faker.datatype.boolean(),
        halitose: faker.datatype.boolean(),
        imobilidade: faker.datatype.boolean(),
        mauOdor: faker.datatype.boolean(),
        pediculos: faker.datatype.boolean(),
        unhasSunhas: faker.datatype.boolean(),
        maHigiene: faker.datatype.boolean(),
        nenhumCuidadoCorporal: faker.datatype.boolean(),
        quantidadeDeBanho: faker.random.numeric(),
        acessoVenoso: faker.datatype.boolean(),
        deiscencia: faker.datatype.boolean(),
        episiorrafia: faker.datatype.boolean(),
        hematomas: faker.datatype.boolean(),
        insicaoCirurgica: faker.datatype.boolean(),
        lesaoPerineal: faker.datatype.boolean(),
        lesalMamilar: faker.datatype.boolean(),
        mamasHiperimeadas: faker.datatype.boolean(),
        mucosasHipocoradas: faker.datatype.boolean(),
        prurido: faker.datatype.boolean(),
        sinaisFlogisticos: faker.datatype.boolean(),
        localIntegridade: faker.random.word(),
        calafrios: faker.datatype.boolean(),
        temperaturaCorporal: faker.random.numeric(),
        pulsoBpm: faker.random.word(),
        paMmHg: faker.random.word(),
        ritimoCardiaco: faker.datatype.boolean(),
        bulhasCardiacas: "hemorragia",
        loquiosAlterados: faker.datatype.string(),
        especifiqueLoquios: faker.random.word(),
        alturaUterina: "Hipotonia uterina",
        clicemiaCapilar: faker.random.numeric(),
        estadoNeurologico: faker.datatype.boolean(),
        cefaleia: faker.datatype.boolean(),
        colica: faker.datatype.boolean(),
        dorNasMamas: faker.datatype.boolean(),
        dorNaIncisao: faker.datatype.boolean(),
        dorPerineal: faker.datatype.boolean(),
        seguranca: "melancolia",
        amoreAceitacao: "apatia",
        dificuldadeDeCuidarRn: faker.datatype.boolean(),
        dificuldadeDeOrdenhar: faker.datatype.boolean(),
        dificuldadeDeAmamentar: faker.datatype.boolean(),
        duvidaSobreAmamentacao: faker.datatype.boolean(),
        duvidaSobreOAutoCuidado: faker.datatype.boolean(),
        duvidaSobreAleitamento: faker.datatype.boolean(),
        evitaFamiliares: faker.datatype.boolean(),
        evitaVisitas: faker.datatype.boolean(),
        isolamento: faker.datatype.boolean(),
        sensacaoAbandono: faker.datatype.boolean(),
        solidao: faker.datatype.boolean(),
        faltaDeConfianca: faker.datatype.boolean(),
        preocupacaoComImagem: faker.datatype.boolean(),
        sentimentoDeIncapacidade: faker.datatype.boolean(),
        afetadaReligiosidade: faker.datatype.boolean(),
        especificarAfetada: faker.random.word(),
      };

      const newPuerperio = new Puerperio({ ...puerperio }, paciente);
      await this.puerperioImediato.create({
        data: {
          ...newPuerperio,
          paciente: { connect: { id: paciente.id } },
        },
      });

      const nascimento: CreateNascimentoDTO = {
        dataDoParto: faker.date.past(20),
        horaDoParto: "15:00",
        tipoDeParto: faker.random.word(),
        outrasInformacoesParto: faker.random.word(),
        posicaoDoParto: faker.random.word(),
        outrasInformacoesPosicao: faker.random.word(),
        perineo: faker.random.word(),
        laceracao: faker.random.word(),
        localizacaoLaceracao: faker.random.word(),
        sutura: faker.random.word(),
        circularCordao: faker.datatype.string(),
        quantasVoltas: faker.random.word(),
        apertadoFrouxo: faker.random.word(),
        complicacoes: faker.random.word(),
        conduta: faker.random.word(),
        dequitacao: faker.datatype.string(),
        horaDequitacao: "22:30",
        mecanismo: faker.random.word(),
        intercorrencias: faker.random.word(),
        loquios: faker.random.word(),
        globoPinard: faker.random.word(),
        utero: faker.random.word(),
        localizacaoUtero: faker.random.word(),
        pressaoArterial: faker.random.word(),
        pulso: faker.random.word(),
        bpm: faker.random.word(),
        respiracao: faker.random.word(),
        temperatura: faker.random.numeric(),
        outrasInformacoesPeriodo: faker.random.word(),
        rn: faker.random.word(),
        chorouAoNascer: faker.random.word(),
        ativoHipoativo: faker.random.word(),
        sexo: faker.random.word(),
        semAnormaMalFormacao: faker.random.word(),
        apgar1: faker.random.word(),
        apgar2: faker.random.word(),
        apgar5: faker.random.word(),
        capurro: faker.random.word(),
        clampeamento: faker.random.word(),
        contatoPelePele: faker.random.word(),
        aleitamento1hora: faker.random.word(),
        quemCortouCordao: faker.random.word(),
        aspiracaoOral: faker.datatype.boolean(),
        lavagemGasttricame: faker.datatype.boolean(),
        reanimacao: faker.datatype.boolean(),
        ventilacaoPressao: faker.datatype.boolean(),
        oxigenioterapia: faker.datatype.boolean(),
        nenhum: faker.datatype.boolean(),
        peso: faker.random.word(),
        altura: faker.random.word(),
        perimetroCefalicoso: faker.random.word(),
        perimetroToracico: faker.random.word(),
        perimetroAbdominal: faker.random.word(),
        kanakion: faker.random.word(),
        bercoAquecido: faker.datatype.boolean(),
        cepap: faker.datatype.boolean(),
        alojamentoConjunto: faker.datatype.boolean(),
        transferidoUnidade: faker.datatype.boolean(),
        outrasInformacoesRn: faker.random.word(),
      };
      const newNascimento = new Nascimento({ ...nascimento }, paciente);
      await this.nascimento.create({
        data: {
          ...newNascimento,
          paciente: { connect: { id: paciente.id } },
        },
      });

      await this.enfermeiro.create({
        data: {
          id: faker.datatype.uuid(),
          nome: "Adm1",
          coren: "Administrativo",
          cargo: "Administrador Chefe",
          password: await bcrypt.hash("123456", 10),
        },
      });
    }
  }
  async onModuleDestroy() {
    await this.$disconnect();
  }
}
